Approach- 
1. Sort the given numbers
2. place two pointers to the array, fisrt at the beginning index and second, at the last.
3. check if the sum of values of pointers-
    a. equals the given element k, move both pointers, to right and left respectively.
    b. is less than given element k, increment first pointer.
    c. is greater than given lemenet k, decrement second pointer.

Time Complexity- nlogn

class Solution {
public:
    int maxOperations(vector<int>& nums, int k) {
      sort(nums.begin(), nums.end());
        int i, j; int count=0;
        
        i=0; j= nums.size()-1;
        while(i<j){
            if(nums[i]+nums[j]==k){
                count++; i++; j--;
            }
            else if(nums[i]+nums[j]>k) j--;
            else if(nums[i]+nums[j]<k) i++;
        }
        return count;
    }
};

 
